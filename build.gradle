import java.time.LocalDateTime

plugins {
	id 'org.springframework.boot' version '2.7.1'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

compileJava{
	options.compilerArgs << '-parameters'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

task generatePostsAndComments() {
	doLast {
		File dataSql = file("src/main/resources/data.sql")
		dataSql.write("")
		//posts
		for(int i = 1; i <= 100; i++){
			dataSql.append("insert into post(id,title, content, created) " +
				"values(${i}, 'Test post ${i}', 'Content ${i}', '" + LocalDateTime.now().minusDays(100 - i) +"');\n")
		}
		//comments
		for(int i = 1; i <= 100; i++){
			int postId = 1 + i/10
			dataSql.append("insert into comment(id, post_id, content, created) " +
					"values(${i},  ${postId}, 'Comment ${i}', '" + LocalDateTime.now().minusDays(100 - i) +"');\n")
		}
	}
}
